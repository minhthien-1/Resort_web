let vouchers = [];
let currentEditId = null;
const API_URL = "http://localhost:5500/api/discounts";
const token = localStorage.getItem("token");

if (!token) {
    alert("Vui l√≤ng ƒëƒÉng nh·∫≠p!");
    window.location.href = "../public/login.html";
}

// C·∫≠p nh·∫≠t hint khi ƒë·ªïi lo·∫°i gi·∫£m gi√°
document.getElementById('discountType').addEventListener('change', function (e) {
    const hint = document.getElementById('discountHint');
    const valueInput = document.getElementById('discountValue');

    if (e.target.value === 'percentage') {
        hint.textContent = 'Nh·∫≠p ph·∫ßn trƒÉm gi·∫£m gi√° (0-100)';
        valueInput.max = 100;
        valueInput.placeholder = '20';
    } else {
        hint.textContent = 'Nh·∫≠p s·ªë ti·ªÅn gi·∫£m (VNƒê)';
        valueInput.removeAttribute('max');
        valueInput.placeholder = '100000';
    }
});

async function loadVouchers() {
    try {
        const res = await fetch(API_URL, {
            headers: { Authorization: `Bearer ${token}` }
        });
        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i danh s√°ch voucher");
        vouchers = await res.json();
        renderTable();
    } catch (err) {
        console.error(err);
        alert("L·ªói khi t·∫£i danh s√°ch voucher!");
    }
}

function openAddModal() {
    currentEditId = null;
    document.getElementById('modalTitle').textContent = 'Th√™m Voucher M·ªõi';
    document.getElementById('voucherModal').classList.add('active');
    resetForm();
}

function openEditModal(id) {
    currentEditId = id;
    const voucher = vouchers.find(v => v.id === id);
    if (voucher) {
        document.getElementById('modalTitle').textContent = 'Ch·ªânh S·ª≠a Voucher';
        document.getElementById('voucherCode').value = voucher.code;
        document.getElementById('voucherName').value = voucher.name;
        document.getElementById('discountType').value = voucher.discount_type;
        document.getElementById('discountValue').value = voucher.value;
        document.getElementById('maxUses').value = voucher.usage_limit;
        document.getElementById('expiryDate').value = voucher.valid_until;
        document.getElementById('description').value = voucher.description || '';
        document.getElementById('status').value = voucher.status;
        document.getElementById('voucherModal').classList.add('active');
    }
}

function closeModal() {
    document.getElementById('voucherModal').classList.remove('active');
    resetForm();
    currentEditId = null;
}

function resetForm() {
    document.querySelector('form').reset();
}

async function saveVoucher(e) {
    e.preventDefault();

    const voucherData = {
        code: document.getElementById('voucherCode').value.trim(),
        name: document.getElementById('voucherName').value.trim(),
        description: document.getElementById('description').value.trim() || "Kh√¥ng c√≥ m√¥ t·∫£",
        discount_type: document.getElementById('discountType').value,
        value: parseFloat(document.getElementById('discountValue').value) || 0,
        valid_from: new Date().toISOString().split('T')[0],
        valid_until: document.getElementById('expiryDate').value,
        status: document.getElementById('status').value || "active",
        usage_limit: parseInt(document.getElementById('maxUses').value) || 0
    };

    console.log("üì§ D·ªØ li·ªáu g·ª≠i ƒëi:", voucherData);

    const method = currentEditId ? "PUT" : "POST";
    const url = currentEditId ? `${API_URL}/${currentEditId}` : API_URL;

    try {
        const res = await fetch(url, {
            method,
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${token}`
            },
            body: JSON.stringify(voucherData),
        });

        const result = await res.json();

        if (!res.ok) {
            console.error("‚ùå L·ªói t·ª´ server:", result);
            throw new Error(result.error || result.details || "L·ªói l∆∞u voucher");
        }

        alert(currentEditId ? "C·∫≠p nh·∫≠t th√†nh c√¥ng!" : "Th√™m voucher th√†nh c√¥ng!");
        closeModal();
        await loadVouchers();
    } catch (err) {
        console.error("‚ùå L·ªói:", err);
        alert("Kh√¥ng th·ªÉ l∆∞u voucher: " + err.message);
    }
}

async function deleteVoucher(id) {
    if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a voucher n√†y?")) return;

    try {
        const res = await fetch(`${API_URL}/${id}`, {
            method: "DELETE",
            headers: { Authorization: `Bearer ${token}` }
        });
        if (!res.ok) throw new Error("L·ªói x√≥a voucher");
        alert("ƒê√£ x√≥a voucher th√†nh c√¥ng!");
        await loadVouchers();
    } catch (err) {
        console.error(err);
        alert("Kh√¥ng th·ªÉ x√≥a voucher!");
    }
}

function renderTable() {
    const tbody = document.querySelector("#voucherTableBody");
    tbody.innerHTML = "";

    if (!vouchers || vouchers.length === 0) {
        tbody.innerHTML = `<tr><td colspan="7" style="text-align:center; color:#999;">Kh√¥ng c√≥ voucher n√†o</td></tr>`;
        return;
    }

    vouchers.forEach((v) => {
        const discountDisplay = v.discount_type === 'percentage'
            ? `${Number(v.value || 0)}%`
            : `${Number(v.value || 0).toLocaleString('vi-VN')} VNƒê`;

        const statusLabel = v.status === "active"
            ? '<span class="status success">ƒêang ho·∫°t ƒë·ªông</span>'
            : '<span class="status danger">Ng·ª´ng ho·∫°t ƒë·ªông</span>';

        const usageDisplay = v.usage_limit > 0
            ? `${v.usage_used || 0}/${v.usage_limit}`
            : "-";

        const validUntil = v.valid_until
            ? new Date(v.valid_until).toLocaleDateString("vi-VN")
            : "-";

        const tr = document.createElement("tr");
        tr.innerHTML = `
                    <td>${v.code || "-"}</td>
                    <td>${v.name || "Kh√¥ng c√≥ t√™n"}</td>
                    <td>${discountDisplay}</td>
                    <td>${usageDisplay}</td>
                    <td>${validUntil}</td>
                    <td>${statusLabel}</td>
                    <td>
                        <button class="btn-edit" onclick="openEditModal('${v.id}')">‚úèÔ∏è</button>
                        <button class="btn-delete" onclick="deleteVoucher('${v.id}')">üóëÔ∏è</button>
                    </td>
                `;
        tbody.appendChild(tr);
    });
}
// --- B·ªô l·ªçc tr·∫°ng th√°i voucher ---
document.getElementById("statusFilter").addEventListener("change", function (e) {
    const selected = e.target.value;
    const tbody = document.querySelector("#voucherTableBody");
    tbody.innerHTML = "";

    let filtered = vouchers;
    if (selected === "active") {
        filtered = vouchers.filter(v => v.status === "active");
    } else if (selected === "inactive") {
        filtered = vouchers.filter(v => v.status !== "active");
    }

    if (filtered.length === 0) {
        tbody.innerHTML = `<tr><td colspan="7" style="text-align:center; color:#999;">Kh√¥ng c√≥ voucher n√†o</td></tr>`;
        return;
    }

    filtered.forEach((v) => {
        const discountDisplay = v.discount_type === 'percentage'
            ? `${Number(v.value || 0)}%`
            : `${Number(v.value || 0).toLocaleString('vi-VN')} VNƒê`;

        const statusLabel = v.status === "active"
            ? '<span class="status success">ƒêang ho·∫°t ƒë·ªông</span>'
            : '<span class="status danger">Ng·ª´ng ho·∫°t ƒë·ªông</span>';

        const usageDisplay = v.usage_limit > 0
            ? `${v.usage_used || 0}/${v.usage_limit}`
            : "-";

        const validUntil = v.valid_until
            ? new Date(v.valid_until).toLocaleDateString("vi-VN")
            : "-";

        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${v.code || "-"}</td>
            <td>${v.name || "Kh√¥ng c√≥ t√™n"}</td>
            <td>${discountDisplay}</td>
            <td>${usageDisplay}</td>
            <td>${validUntil}</td>
            <td>${statusLabel}</td>
            <td>
                <button class="btn-edit" onclick="openEditModal('${v.id}')">‚úèÔ∏è</button>
                <button class="btn-delete" onclick="deleteVoucher('${v.id}')">üóëÔ∏è</button>
            </td>
        `;
        tbody.appendChild(tr);
    });
});

document.querySelector('#voucherModal form').addEventListener('submit', saveVoucher);
document.getElementById('voucherModal').addEventListener('click', function (e) {
    if (e.target === this) closeModal();
});
document.getElementById('searchInput').addEventListener('keyup', function (e) {
    const searchTerm = e.target.value.toLowerCase();
    const rows = document.querySelectorAll('#voucherTable tbody tr');
    rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
    });
});

loadVouchers();

// ===== ƒêƒÉng xu·∫•t =====
document.getElementById("logoutBtn").addEventListener("click", () => {
    if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën ƒëƒÉng xu·∫•t kh√¥ng?")) {
        localStorage.removeItem("token");
        alert("ƒê√£ ƒëƒÉng xu·∫•t!");
        window.location.href = "http://localhost:5500/login.html";
    }
});
