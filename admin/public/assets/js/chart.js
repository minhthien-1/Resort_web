// ==============================
// üìä Revenue Chart (6 months)
// ==============================

async function loadRevenueChart() {
    try {
        // G·ªçi API backend ƒë·ªÉ l·∫•y d·ªØ li·ªáu doanh thu theo th√°ng
        const res = await fetch(`${window.location.origin}/api/revenue/monthly`);
        let data = await res.json();

        if (!data || data.length === 0) {
            console.warn("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu doanh thu!");
            return;
        }

        // ‚úÖ L·∫•y 6 th√°ng g·∫ßn nh·∫•t (n·∫øu c√≥ nhi·ªÅu h∆°n 6 th√°ng)
        data = data.slice(-6);

        // ‚úÖ Chuy·ªÉn 'YYYY-MM' ‚Üí 'Th√°ng vi·∫øt t·∫Øt'
        const labels = data.map(row => {
            const [year, month] = row.month.split("-");
            const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            return monthNames[parseInt(month) - 1];
        });

        const values = data.map(row => Number(row.total_revenue));

        // L·∫•y context c·ªßa canvas
        const ctx = document.getElementById("revenueChart").getContext("2d");

        // ‚úÖ T·∫°o gradient (hi·ªáu ·ª©ng b√≥ng ƒë·∫πp)
        const gradient = ctx.createLinearGradient(0, 0, 0, 400);
        gradient.addColorStop(0, "rgba(54, 162, 235, 0.5)");  // xanh tr√™n
        gradient.addColorStop(1, "rgba(153, 102, 255, 0.2)"); // t√≠m d∆∞·ªõi

        // ‚úÖ H·ªßy chart c≈© (n·∫øu c√≥) ƒë·ªÉ tr√°nh l·ªói khi reload
        if (window.revenueChartInstance) {
            window.revenueChartInstance.destroy();
        }

        // ‚úÖ T·∫°o bi·ªÉu ƒë·ªì
        window.revenueChartInstance = new Chart(ctx, {
            type: "line",
            data: {
                labels,
                datasets: [
                    {
                        label: "Doanh thu (VND)",
                        data: values,
                        fill: true,
                        backgroundColor: gradient,
                        borderColor: "rgba(54, 162, 235, 1)",
                        borderWidth: 3,
                        pointBackgroundColor: "white",
                        pointBorderColor: "rgba(54, 162, 235, 1)",
                        tension: 0.35,
                    },
                ],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: "#333",
                        titleFont: { size: 13, weight: "bold" },
                        bodyFont: { size: 13 },
                        callbacks: {
                            label: ctx => `${ctx.parsed.y.toLocaleString()} VND`,
                        },
                    },
                },
                scales: {
                    x: {
                        grid: { display: false },
                        ticks: { color: "#666", font: { size: 13 } },
                    },
                    y: {
                        beginAtZero: true,
                        suggestedMax: 200000000, // ‚úÖ Tr·ª•c Y gi·ªõi h·∫°n ƒë·∫øn 50 tri·ªáu
                        ticks: {
                            color: "#666",
                            font: { size: 13 },
                            stepSize: 50000000,
                            callback: val => val.toLocaleString(),
                        },
                        grid: { color: "rgba(0, 0, 0, 0.05)" },
                    },
                },
            }

        });

        console.log("‚úÖ Bi·ªÉu ƒë·ªì doanh thu 6 th√°ng g·∫ßn nh·∫•t:", { labels, values });
    } catch (err) {
        console.error("‚ùå L·ªói khi t·∫£i bi·ªÉu ƒë·ªì doanh thu:", err);
    }
}

// G·ªçi khi trang t·∫£i xong
document.addEventListener("DOMContentLoaded", loadRevenueChart);
